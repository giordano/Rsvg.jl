using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libgdk_pixbuf-2", "libgdk_pixbuf-2.0"], :libgdkpixbuf),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/gdk-pixbuf_jll.jl/releases/download/gdk-pixbuf-v2.38.2+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/gdk-pixbuf.v2.38.2.aarch64-linux-gnu.tar.gz", "07f3dc60940f7218ca6352c99c6039941736bcf132dd95c2e44e00c697f6eaef"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/gdk-pixbuf.v2.38.2.aarch64-linux-musl.tar.gz", "97881947648cb8f134e68699d7643666f364758c26a08c1f8b55dd9268cf45a3"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/gdk-pixbuf.v2.38.2.arm-linux-gnueabihf.tar.gz", "77482ee2104746f2986ca23b761ecaf8a966fb0cba9ba5144f0bf7966c1d2f44"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/gdk-pixbuf.v2.38.2.arm-linux-musleabihf.tar.gz", "b72876e07051ca18e899998ca9b7be05b3b556a7ce85b4ff794c6a192933451b"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/gdk-pixbuf.v2.38.2.i686-linux-gnu.tar.gz", "05259b8b4cc99ef8ec1a9c7a6e4d4de16f06d3f8d7f6ee622412c182a82200c8"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/gdk-pixbuf.v2.38.2.i686-linux-musl.tar.gz", "3fe1ab4969e894ed368fc018fecfef5d4a8f766fde793dd1da82d93e707123f2"),
    Windows(:i686) => ("$bin_prefix/gdk-pixbuf.v2.38.2.i686-w64-mingw32.tar.gz", "d8116ac0bab4288b8481e9c6c45812856e3b371edc1baac1d5afc8f25044e5e1"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/gdk-pixbuf.v2.38.2.powerpc64le-linux-gnu.tar.gz", "95bd1aa8b5d592818db6d6f24e28f0d83a24ecc6cfbedaa968d11c4fa0e4ad07"),
    MacOS(:x86_64) => ("$bin_prefix/gdk-pixbuf.v2.38.2.x86_64-apple-darwin14.tar.gz", "ad23d9029d872959b41992c10b9037c78bf4dd717a123cc88ea78f44dd98f33d"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/gdk-pixbuf.v2.38.2.x86_64-linux-gnu.tar.gz", "ba2e392d1515a2f5ca3e873863c38e2b52126fd9f5abbd7fb115e37304e89166"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/gdk-pixbuf.v2.38.2.x86_64-linux-musl.tar.gz", "000c34da688bbb07240c6b29866de21fe568b8d0c4de55e8053205c0ca85c985"),
    FreeBSD(:x86_64) => ("$bin_prefix/gdk-pixbuf.v2.38.2.x86_64-unknown-freebsd11.1.tar.gz", "27d950ed2f03c44890d6c296222860eee9cf23511e08e1cd5ca521501516b033"),
    Windows(:x86_64) => ("$bin_prefix/gdk-pixbuf.v2.38.2.x86_64-w64-mingw32.tar.gz", "c35bdcfb23ef1e9dff4062361f662c0c9b4eb666f2405dff7c09fd39ded34a31"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
